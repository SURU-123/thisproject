{"version":3,"sources":["hooks/use-Input.js","components/SimpleInput.js","components/BasicForm.js","App.js","index.js"],"names":["initialInputState","value","istouched","InputstateReducer","state","action","type","UseInput","validateValue","useReducer","inputState","dispatch","valueIsvalid","hasError","isvalid","valuechangeHandler","event","target","inputblurhandler","reset","SimpleInput","props","trim","enterName","Nameisvalid","nameInputHasError","InputchangeHandler","inputfocusblurhandler","resetNameInput","includes","Email","Emailisvalid","EmailInputhasError","EmailchangeHandler","Emailfocusblurhandler","resetEmailInput","NameInputvalid","formisvalid","console","log","formControl","onSubmit","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","isInputvalid","isEmailvalid","BasicForm","FirstName","FirstNameisvalid","FirstNameHasError","FirstNamechangeHandler","FirstNameblurhandler","resetFirstName","LastName","LastNameisvalid","LastNameHasError","LastNamechangeHandler","LastNameblurhandler","resetLastName","EmailHasError","Emailblurhandler","resetEmail","FirstnameClass","LastnameClass","EmailClass","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d321ef.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n  value: \"\",\r\n  istouched: false,\r\n};\r\n\r\nconst InputstateReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { value: action.value, istouched: state.istouched };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return { istouched: true, value: state.value };\r\n  }\r\n  if (action.type === \"RESET\") {\r\n    return { istouched: false, value: \"\" };\r\n  }\r\n  return InputstateReducer;\r\n};\r\n\r\nconst UseInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    InputstateReducer,\r\n    initialInputState\r\n  );\r\n\r\n  //   const [enteredValue, setenteredValue] = useState(\"\");\r\n  //   const [istouched, setistouched] = useState(false);\r\n\r\n  const valueIsvalid = validateValue(inputState.value);\r\n  const hasError = !valueIsvalid && inputState.istouched;\r\n\r\n  const valuechangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n    // setenteredValue(event.target.value);\r\n  };\r\n\r\n  const inputblurhandler = () => {\r\n    dispatch({ type: \"BLUR\" });\r\n    // setistouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({ type: \"RESET\" });\r\n    // setenteredValue(\"\");\r\n    // setistouched(false);\r\n  };\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isvalid: valueIsvalid,\r\n    hasError,\r\n    valuechangeHandler,\r\n    inputblurhandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default UseInput;\r\n","import UseInput from \"../hooks/use-Input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enterName,\n    isvalid: Nameisvalid,\n    hasError: nameInputHasError,\n    valuechangeHandler: InputchangeHandler,\n    inputblurhandler: inputfocusblurhandler,\n    reset: resetNameInput,\n  } = UseInput((value) => value.trim() !== \"\");\n\n  const {\n    value: Email,\n    isvalid: Emailisvalid,\n    hasError: EmailInputhasError,\n    valuechangeHandler: EmailchangeHandler,\n    inputblurhandler: Emailfocusblurhandler,\n    reset: resetEmailInput,\n  } = UseInput((value) => value.includes(\"@\") && value.trim() !== \"\");\n\n  const NameInputvalid = nameInputHasError && !EmailInputhasError;\n\n  let formisvalid = false;\n\n  if (Nameisvalid || Emailisvalid) {\n    formisvalid = true;\n  }\n\n  const formSubmithandler = (event) => {\n    event.preventDefault();\n\n    console.log(enterName, Email);\n    resetNameInput();\n    resetEmailInput();\n  };\n  if (NameInputvalid) {\n    console.log(\"hi\");\n  }\n\n  const formControl = NameInputvalid ? \"form-control invalid\" : \"form-control\";\n  return (\n    <form onSubmit={formSubmithandler}>\n      <div className={formControl}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enterName}\n          onChange={InputchangeHandler}\n          onBlur={inputfocusblurhandler}\n        />\n      </div>\n      <div className={formControl}>\n        <label htmlFor=\"Email\">E-mail</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={Email}\n          onChange={EmailchangeHandler}\n          onBlur={Emailfocusblurhandler}\n        />\n      </div>\n      {NameInputvalid && !Emailisvalid && (\n        <p className=\"error-text\">name is empty </p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formisvalid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","import UseInput from \"../hooks/use-Input\";\n\nconst isInputvalid = (value) => value.trim() !== \"\";\nconst isEmailvalid = (value) => value.includes(\"@\") && value.trim() !== \"\";\nconst BasicForm = (props) => {\n  const {\n    value: FirstName,\n    isvalid: FirstNameisvalid,\n    hasError: FirstNameHasError,\n    valuechangeHandler: FirstNamechangeHandler,\n    inputblurhandler: FirstNameblurhandler,\n    reset: resetFirstName,\n  } = UseInput(isInputvalid);\n  const {\n    value: LastName,\n    isvalid: LastNameisvalid,\n    hasError: LastNameHasError,\n    valuechangeHandler: LastNamechangeHandler,\n    inputblurhandler: LastNameblurhandler,\n    reset: resetLastName,\n  } = UseInput(isInputvalid);\n  const {\n    value: Email,\n    isvalid: Emailisvalid,\n    hasError: EmailHasError,\n    valuechangeHandler: EmailchangeHandler,\n    inputblurhandler: Emailblurhandler,\n    reset: resetEmail,\n  } = UseInput(isEmailvalid);\n\n  let formisvalid = false;\n  if (FirstNameisvalid && LastNameisvalid && Emailisvalid) {\n    formisvalid = true;\n  }\n\n  const formSubmithandler = (event) => {\n    event.preventDefault();\n    console.log(FirstName, LastName, Email);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const FirstnameClass = !FirstNameHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  const LastnameClass = !LastNameHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  const EmailClass = !EmailHasError ? \"form-control\" : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmithandler}>\n      <div className=\"control-group\">\n        <div className={FirstnameClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstname\"\n            value={FirstName}\n            onChange={FirstNamechangeHandler}\n            onBlur={FirstNameblurhandler}\n          />\n          {FirstNameHasError && <p>Please Enter a FirstName </p>}\n        </div>\n        <div className={LastnameClass}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastname\"\n            value={LastName}\n            onChange={LastNamechangeHandler}\n            onBlur={LastNameblurhandler}\n          />\n          {LastNameHasError && <p>Please Enter a LastName</p>}\n        </div>\n      </div>\n      <div className={EmailClass}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={Email}\n          onChange={EmailchangeHandler}\n          onBlur={Emailblurhandler}\n        />\n        {EmailHasError && <p>Please Enter a Email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formisvalid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import SimpleInput from \"./components/SimpleInput\";\nimport BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}